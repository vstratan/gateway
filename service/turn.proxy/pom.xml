<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.kaazing</groupId>
        <artifactId>gateway</artifactId>
        <version>develop-SNAPSHOT</version>
        <relativePath>../../pom.xml</relativePath>
    </parent>
    <artifactId>gateway.service.turn.proxy</artifactId>
    <name>Turn Proxy Service</name>
    <description>Proxy service to connect to backend services</description>

    <url>https://github.com/kaazing/gateway.service.proxy.git</url>
    <scm>
        <connection>scm:git:${project.scm.url}</connection>
        <developerConnection>scm:git:${project.scm.url}</developerConnection>
        <url>git@github.com:kaazing/gateway.service.proxy.git</url>
    </scm>

    <dependencies>
            <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
        </dependency>
        <dependency>
            <groupId>org.kaazing</groupId>
            <artifactId>gateway.transport.http</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.kaazing</groupId>
            <artifactId>gateway.service</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.kaazing</groupId>
            <artifactId>gateway.service.proxy</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.kaazing</groupId>
            <artifactId>gateway.util</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.kaazing</groupId>
            <artifactId>gateway.test.ca</artifactId>
            <version>[1.0.0.0,1.1.0.0)</version>
            <classifier>keystore</classifier>
            <scope>test</scope>
        </dependency>

        <!-- test dependencies -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jmock</groupId>
            <artifactId>jmock</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jmock</groupId>
            <artifactId>jmock-legacy</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.kaazing</groupId>
            <artifactId>test.util</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.kaazing</groupId>
            <artifactId>gateway.server</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.kaazing</groupId>
                <artifactId>k3po-maven-plugin</artifactId>
            </plugin>


            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <includes>
                        <include>**/*.java</include>
                    </includes>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>verify</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.8</version>
                <executions>
                    <execution>
                        <id>unpack-truststore</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeArtifactIds>gateway.test.ca</includeArtifactIds>
                            <outputDirectory>${basedir}/target/truststore</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>1.3.1</version>
                <executions>
                    <execution>
                        <id>check-docker-available</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireProperty>
                                    <property>env.DOCKER_HOST</property>
                                    <message>Error: DOCKER_HOST environment variable not found. You must have a
                                        docker engine available. See README.md.
                                    </message>
                                </requireProperty>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>

                <configuration>
                    <images>
                        <image>
                            <name>coturn_server</name>
                            <build>
                                <from>ubuntu:16.04</from>
                                <optimise>false</optimise>
                                <runCmds>
                                    <run>apt-get update</run>
                                    <run>apt-get dist-upgrade -y</run>
                                    <run>DEBIAN_FRONTEND=noninteractive \
                                        apt-get install -y \
                                        coturn </run>
                                </runCmds>
                            </build>
                            <run>
                                <hostname>localhost</hostname>
                                <privileged>true</privileged>
                                <entrypoint>/usr/bin/turnserver --no-cli -v --use-auth-secret --static-auth-secret=turn.shared.secret</entrypoint>
                                <ports>
                                    <port>3478:3478</port>
                                </ports>
                                <wait>
                                    <tcp>
                                        <ports>
                                            <port>3478</port>
                                        </ports>
                                    </tcp>
                                    <time>30000</time>
                                </wait>
                            </run>
                        </image>
                    </images>
                </configuration>

                <executions>
                    <execution>
                        <id>start</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>build</goal>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                        <configuration>
                            <removeVolumes>true</removeVolumes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


        </plugins>
    </build>

</project>
